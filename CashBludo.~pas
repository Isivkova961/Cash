unit CashBludo;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, CheckLst, ExtCtrls, StdCtrls, ImgList, ComCtrls, ToolWin,
  Buttons;

type
  TfBluda = class(TForm)
    pBludo1: TPanel;
    pBludo2: TPanel;
    pBludo3: TPanel;
    lbNameBludo: TListBox;
    sBludo: TSplitter;
    clbSpisokProd: TCheckListBox;
    lNameBludo: TLabel;
    lProd: TLabel;
    eNameBludo: TEdit;
    eProd: TEdit;
    sbNew: TSpeedButton;
    sbAdd: TSpeedButton;
    procedure FormShow(Sender: TObject);
    procedure LoadData;
    procedure lbNameBludoClick(Sender: TObject);
    procedure clbSpisokProdClick(Sender: TObject);
    procedure sbNewClick(Sender: TObject);
    procedure lbNameBludoKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure clbSpisokProdKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure sbAddClick(Sender: TObject);
    procedure clbSpisokProdClickCheck(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  fBluda: TfBluda;

implementation

uses CashDM, CachMain, SpisokBlud;

{$R *.dfm}

procedure TfBluda.FormShow(Sender: TObject);
begin
  LoadData;
  clbSpisokProd.Clear;
  eNameBludo.Text := '';
  eProd.Text := '';
end;

procedure TfBluda.LoadData;
begin
  with dmCash do
    begin
      adoqSpisokBlud.SQL.Clear;
      adoqSpisokBlud.SQL.Append('SELECT * FROM spisok_blud');
      adoqSpisokBlud.SQL.Append('ORDER BY name_bludo ASC');
      adoqSpisokBlud.Open;
      adoqStatus.SQL.Clear;
      adoqStatus.SQL.Append('SELECT name_pokup FROM status_pokup');
      adoqStatus.SQL.Append('WHERE the_end = false and f_show = false');
      adoqStatus.Open;
    end;
  lbNameBludo.Clear;
  with  dmCash.adoqSpisokBlud do
    begin
      DisableControls;
      lbNameBludo.Items.BeginUpdate;
      First;
      while not Eof do
        begin
          lbNameBludo.Items.AddObject(FieldByName('name_bludo').AsString, Pointer(FieldByName('id').AsInteger));
          Next;
        end;
      lbNameBludo.Items.EndUpdate;
      EnableControls;
    end;
end;

procedure TfBluda.lbNameBludoClick(Sender: TObject);
var
  index, i: integer;
  s: string;
begin
  clbSpisokProd.Clear;
  with dmCash do
    begin
      clbSpisokProd.Items.BeginUpdate;
      index := integer(lbNameBludo.Items.Objects[lbNameBludo.ItemIndex]);
      if adoqSpisokBlud.Locate('id', index, []) then
        begin
          s := adoqSpisokBlud.FieldByName('spisok_prod').AsString;
          while length(s) > 0 do
            begin
              if pos(',', s) > 0 then
                begin
                  clbSpisokProd.Items.Append(copy(s, 1, pos(',', s) - 1));
                  delete(s, 1, pos(',', s));
                end
              else
                begin
                  clbSpisokProd.Items.Append(s);
                  s := '';
                end;
            end;
        end;
      for i := 0 to clbSpisokProd.Items.Count - 1 do
        if adoqStatus.Locate('name_pokup', clbSpisokProd.Items[i],[]) then
          clbSpisokProd.Checked[i] := true;
      clbSpisokProd.Items.EndUpdate;
    end;
  eNameBludo.Text := lbNameBludo.Items[lbNameBludo.ItemIndex];
end;

procedure TfBluda.clbSpisokProdClick(Sender: TObject);
begin
  eProd.Text := clbSpisokProd.Items[clbSpisokProd.ItemIndex];
end;

procedure TfBluda.sbNewClick(Sender: TObject);
var
  i, index: integer;
  prod: string;
begin
  if (eNameBludo.Text <> '')  and (eProd.Text <> '') then
    begin
      index := lbNameBludo.Items.IndexOf(eNameBludo.Text);
      if index < 0 then
        begin
          if MessageDlg('Добавить новое блюдо?', mtWarning, mbOkCancel, 0) = mrOk then
            begin
              with dmCash do
                begin
                  adoqAddBludo.SQL.Clear;
                  adoqAddBludo.SQL.Append('INSERT INTO spisok_blud');
                  adoqAddBludo.SQL.Append('(name_bludo, spisok_prod)');
                  adoqAddBludo.SQL.Append('VALUES (:n_b, :s_p)');
                  adoqAddBludo.Parameters.ParamByName('n_b').Value := eNameBludo.Text;
                  if eProd.Text <> '' then
                    adoqAddBludo.Parameters.ParamByName('s_p').Value := eProd.Text
                  else
                    adoqAddBludo.Parameters.ParamByName('s_p').Value := null;
                  adoqAddBludo.ExecSQL;
                end;
            end;
        end
      else
        begin
          if (clbSpisokProd.Items.IndexOf(eProd.Text) < 0) and (eProd.Text <> '') then
            with dmCash do
              begin
                adoqAddBludo.SQL.Clear;
                adoqAddBludo.SQL.Append('UPDATE spisok_blud');
                adoqAddBludo.SQL.Append('SET spisok_prod = :s_p');
                adoqAddBludo.SQL.Append('WHERE id = :iid');
                adoqAddBludo.Parameters.ParamByName('iid').Value := integer(lbNameBludo.Items.Objects[index]);
                if adoqSpisokBlud.Locate('id', integer(lbNameBludo.Items.Objects[index]), []) then
                  prod := adoqSpisokBlud.FieldByName('spisok_prod').AsString + ',' + eProd.Text;
                adoqAddBludo.Parameters.ParamByName('s_p').Value := prod;
                adoqAddBludo.ExecSQL;
                if lbNameBludo.ItemIndex = index then
                  clbSpisokProd.Items.Append(eProd.Text);
              end;
        end;
      LoadData;
      eProd.Text := '';
  end;
end;

procedure TfBluda.lbNameBludoKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if lbNameBludo.Items.Count <> 0 then
    if Key = 46 then
      if MessageDlg('Вы уверены что хотите удалить?', mtWarning, mbOkCancel, 0) = mrOk then
        begin
          with dmCash do
            begin
              adoqAddBludo.SQL.Clear;
              adoqAddBludo.SQL.Append('DELETE FROM spisok_blud');
              adoqAddBludo.SQL.Append('WHERE id = :iid');
              adoqAddBludo.Parameters.ParamByName('iid').Value := integer(lbNameBludo.Items.Objects[lbNameBludo.ItemIndex]);
              adoqAddBludo.ExecSQL;
            end;
          lbNameBludo.Items.Delete(lbNameBludo.ItemIndex);
          clbSpisokProd.Clear;
        end;
  LoadData;        
end;

procedure TfBluda.clbSpisokProdKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  i, index: integer;
  prod: string;
begin
  index := lbNameBludo.Items.IndexOf(eNameBludo.Text);
  if clbSpisokProd.Items.Count <> 0 then
    if Key = 46 then
      if MessageDlg('Вы уверены что хотите удалить?', mtWarning, mbOkCancel, 0) = mrOk then
        begin
          clbSpisokProd.Items.Delete(clbSpisokProd.ItemIndex);
          with dmCash do
            begin
              adoqAddBludo.SQL.Clear;
              adoqAddBludo.SQL.Append('UPDATE spisok_blud');
              adoqAddBludo.SQL.Append('SET spisok_prod = :s_p');
              adoqAddBludo.SQL.Append('WHERE id = :iid');
              adoqAddBludo.Parameters.ParamByName('iid').Value := integer(lbNameBludo.Items.Objects[index]);
              for i := 0 to clbSpisokProd.Items.Count - 1 do
                prod := prod + clbSpisokProd.Items[i] + ',';
              delete(prod, length(prod), 1);
              adoqAddBludo.Parameters.ParamByName('s_p').Value := prod;
              adoqAddBludo.ExecSQL;
            end;
        end;
  LoadData;
end;

procedure TfBluda.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if Key = 27 then
    Close;
  if Key = 45 then
    sbNew.Click;  
end;

procedure TfBluda.sbAddClick(Sender: TObject);
var
  index: integer;
begin
  index := lbNameBludo.Items.IndexOf(eNameBludo.Text);
  with dmCash do
    begin
      adoqAddBludo.SQL.Clear;
      adoqAddBludo.SQL.Append('INSERT INTO bludo_pr');
      adoqAddBludo.SQL.Append('(date_prig, id_bludo, month_prig)');
      adoqAddBludo.SQL.Append('VALUES (:d_p, :i_b, :m_p)');
      adoqAddBludo.Parameters.ParamByName('d_p').Value := fMainCash.Date_data;
      adoqAddBludo.Parameters.ParamByName('i_b').Value := integer(lbNameBludo.Items.Objects[index]);
      adoqAddBludo.Parameters.ParamByName('m_p').Value := fMainCash.cobMonth.Text + ' ' + fMainCash.spGod.Text;
      adoqAddBludo.ExecSQL;
    end;
  fSpisokBlud.LoadData;
  Close;
end;

procedure TfBluda.clbSpisokProdClickCheck(Sender: TObject);
begin
  if clbSpisokProd.Checked[clbSpisokProd.ItemIndex] = true then
    if MessageDlg('Добавить продукт в список покупок?', mtWarning, mbOkCancel, 0) = mrOk then
      with dmCash do
        begin
          adoqAddBludo.SQL.Clear;
          adoqAddBludo.SQL.Append('INSERT INTO spisok_pokup');
          adoqAddBludo.SQL.Append('(name_pokup)');
          adoqAddBludo.SQL.Append('VALUES (:n_p)');
          adoqAddBludo.Parameters.ParamByName('n_p').Value := clbSpisokProd.Items[clbSpisokProd.ItemIndex];
          adoqAddBludo.ExecSQL;
        end;
end;

end.
